window.SIDEBAR_ITEMS = {"fn":[["bond","Take the origin account as a stash and lock up `value` of its balance. `controller` will be the account that controls it."],["bond_extra","Add some extra amount that have appeared in the stash `free_balance` into the balance up for staking."],["cancel_deferred_slash","Cancel enactment of a deferred slash."],["chill","Declare no desire to either validate or nominate."],["chill_other","Declare a `controller` to stop participating as either a validator or nominator."],["force_apply_min_commission","Force a validator to have at least the minimum commission. This will not affect a validator who already has a commission greater than or equal to the minimum. Any account can call this."],["force_new_era","Force there to be a new era at the end of the next session. After this, it will be reset to normal (non-forced) behaviour."],["force_new_era_always","Force there to be a new era at the end of sessions indefinitely."],["force_no_eras","Force there to be no new eras indefinitely."],["force_unstake","Force a current staker to become completely unstaked, immediately."],["increase_validator_count","Increments the ideal number of validators upto maximum of `ElectionProviderBase::MaxWinners`."],["kick","Remove the given nominations from the calling validator."],["nominate","Declare the desire to nominate `targets` for the origin controller."],["payout_stakers","Pay out all the stakers behind a single validator for a single era."],["reap_stash","Remove all data structures concerning a staker/stash once it is at a state where it can be considered `dust` in the staking system. The requirements are:"],["rebond","Rebond a portion of the stash scheduled to be unlocked."],["scale_validator_count","Scale up the ideal number of validators by a factor upto maximum of `ElectionProviderBase::MaxWinners`."],["set_controller","(Re-)set the controller of a stash."],["set_invulnerables","Set the validators who cannot be slashed (if any)."],["set_min_commission","Sets the minimum amount of commission that each validators must maintain."],["set_payee","(Re-)set the payment target for a controller."],["set_staking_configs","Update the various staking configurations ."],["set_validator_count","Sets the ideal number of validators."],["unbond","Schedule a portion of the stash to be unlocked ready for transfer out after the bond period ends. If this leaves an amount actively bonded less than T::Currency::minimum_balance(), then it is increased to the full amount."],["validate","Declare the desire to validate for the origin controller."],["withdraw_unbonded","Remove any unlocked chunks from the `unlocking` queue from our management."]]};