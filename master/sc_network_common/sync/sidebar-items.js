window.SIDEBAR_ITEMS = {"enum":[["ImportResult","Block or justification request polled from `ChainSync`"],["OnBlockData","Result of [`ChainSync::on_block_data`]."],["OnBlockJustification","Result of [`ChainSync::on_block_justification`]."],["OnStateData","Result of `ChainSync::on_state_data`."],["PeerRequest",""],["PollBlockAnnounceValidation","Result of [`ChainSync::poll_block_announce_validation`]."],["PollResult","Value polled from `ChainSync`"],["SyncEvent","Syncing-related events that other protocols can subscribe to."],["SyncMode","Operation mode."],["SyncState","Reported sync state."]],"mod":[["message","Network packet message types. These get serialized and put into the lower level protocol payload."],["metrics",""],["warp",""]],"struct":[["BadPeer","A peer did not behave as expected and should be reported."],["ExtendedPeerInfo","Info about a peerâ€™s known state (both full and light)."],["Metrics",""],["OpaqueBlockRequest","Wrapper for implementation-specific block request."],["OpaqueBlockResponse","Wrapper for implementation-specific block response."],["OpaqueStateRequest","Wrapper for implementation-specific state request."],["OpaqueStateResponse","Wrapper for implementation-specific state response."],["PeerInfo","The sync status of a peer we are trying to sync with"],["StateDownloadProgress","Reported state download progress."],["SyncStatus","Syncing status and statistics."]],"trait":[["ChainSync","Something that represents the syncing strategy to download past and future blocks of the chain."],["SyncEventStream",""],["SyncStatusProvider","Provides high-level status of syncing."]]};