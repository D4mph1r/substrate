load("@rules_rust//rust:defs.bzl", "rust_library")
load("@crate_index//:defs.bzl", "all_crate_deps", "aliases")

package(default_visibility = ["//visibility:public"])

rust_library(
    name = "sp-core",
    version = "21.0.0",
    srcs = glob(["src/**/*.rs"]),
	aliases = {"@crate_index__parity-scale-codec-3.6.1//:parity_scale_codec": "codec"},
	compile_data = glob(
        include = ["**"],
        exclude = [
            "**/* *",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
	crate_root = "src/lib.rs",
    edition = "2021",
    crate_name = "sp_core",
	crate_features = [
		"std",
		"merlin/std",
		"full_crypto",
		"log/std",
		"thiserror",
		"lazy_static",
		"parking_lot",
		"bounded-collections/std",
		"primitive-types/std",
		"primitive-types/serde",
		"primitive-types/byteorder",
		"primitive-types/rustc-hex",
		"impl-serde/std",
		"codec/std",
		"scale-info/std",
		"hash256-std-hasher/std",
		"hash-db/std",
		"sp-std/std",
		"serde/std",
		"blake2/std",
		"array-bytes",
		"ed25519-zebra/std",
		"bs58/std",
		"substrate-bip39",
		"tiny-bip39",
		"rand",
		"schnorrkel/std",
		"regex",
		"secp256k1/std",
		"secp256k1/global-context",
		"sp-core-hashing/std",
		"sp-debug-derive/std",
		"sp-externalities",
		"sp-storage/std",
		"sp-runtime-interface/std",
		"ss58-registry/std",
		"zeroize/alloc",
		"secrecy/alloc",
		"futures",
		"futures/thread-pool",
		"libsecp256k1/std",
		"dyn-clonable",
		"serde",
		"array-bytes",
		"blake2",
		"bounded-collections/serde",
		"bs58/alloc",
		"scale-info/serde",
		"secrecy/alloc",
		"impl-serde",
		"primitive-types/serde_no_std",
		"sp-storage/serde",
		"sp-core-hashing",
		"array-bytes",
		"ed25519-zebra",
		"blake2",
		"libsecp256k1",
		"secp256k1",
		"sp-core-hashing",
		"sp-runtime-interface/disable_target_static_assertions",
	],
	deps = all_crate_deps(normal = True) + [
		"//primitives/std:sp-std",
		"//primitives/storage:sp-storage",
		"//primitives/externalities:sp-externalities",
		"//primitives/core/hashing:sp-core-hashing",
		"//primitives/runtime-interface:sp-runtime-interface",
	],
	proc_macro_deps = all_crate_deps(proc_macro = True) + [
		"//primitives/debug-derive:sp-debug-derive",
	],
)
