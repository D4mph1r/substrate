window.SIDEBAR_ITEMS = {"enum":[["Call","Contains one variant per dispatchable that can be called by an extrinsic."],["Event","The event emitted by this pallet."]],"mod":[["dispatchables","Auto-generated docs-only module listing all defined dispatchables for this pallet. Note that members of this module cannot be used directly and are only provided for documentation purposes."],["storage_types","Auto-generated docs-only module listing all defined storage types for this pallet. Note that members of this module cannot be used directly and are only provided for documentation purposes."]],"struct":[["Pallet","The pallet implementing the on-chain logic."]],"trait":[["Config","Configuration trait of this pallet."]],"type":[["Bar","The Hasher requirement is skipped by `dev_mode`. So, second parameter can be `_` and `Blake2_128Concat` is used as a default. When the dev_mode is removed, we would need to specify the hasher like so: `pub type Bar<T: Config> = StorageMap<_, Blake2_128Concat, T::AccountId, T::Balance>;`."],["Dummy","The MEL requirement for bounded pallets is skipped by `dev_mode`. This means that all storages are marked as unbounded. This is equivalent to specifying `#[pallet::unbounded]` on this type definitions. When the dev_mode is removed, we would need to implement implement `MaxEncodedLen`."],["Module","Type alias to `Pallet`, to be used by `construct_runtime`."]]};